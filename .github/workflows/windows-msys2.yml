name: Windows MSYS2

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        arch: [x64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools ninja cmake build

    - name: Build
      shell: cmd
      run: |
        cmake -B build -G Ninja ^
          -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release

    - name: Test Import
      run: |
        python -c "from ssentencepiece import Ssentencepiece; print('Import successful!')"

    - name: Build wheel
      run: |
        python -m build --wheel

    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows-${{ matrix.python-version }}-${{ matrix.arch }}
        path: dist/*.whl 