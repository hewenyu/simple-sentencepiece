name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - '*'

concurrency:
  group: build-wheels-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      # see https://cibuildwheel.readthedocs.io/en/stable/changelog/
      # for a list of versions
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_SKIP: "cp27-* cp35-* cp36-* pp* *-musllinux* *-manylinux_i686"
          CIBW_BUILD_VERBOSITY: 3

      - name: Display wheels
        shell: bash
        run: |
          ls -lh ./wheelhouse/
          ls -lh ./wheelhouse/*.whl

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          python3 -m pip install --upgrade build
          python3 -m build -s
          ls -l dist/*

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel twine setuptools
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            twine upload ./wheelhouse/*.whl dist/*.tar.gz
          else
            twine upload ./wheelhouse/*.whl
          fi

      # - name: Publish sdist to PyPI
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      #   run: |
      #     twine upload dist/simple-sentencepiece-*.tar.gz
