name: Windows Build

on:
  # push:
  #   branches:
  #     - dev
  # pull_request:
  #   branches:
  #     - devwin
  workflow_call:

jobs:
  static-lib:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja

    - name: Build Static Library
      shell: msys2 {0}
      run: |
        cmake -B build-static -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=OFF \
          -DSBPE_BUILD_PYTHON=OFF \
          -DCMAKE_INSTALL_PREFIX="$PWD/install" \
          -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$PWD/install/lib" \
          -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY="$PWD/install/lib" \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="$PWD/install/bin"
        cmake --build build-static --config Release
        cmake --install build-static --config Release
        mkdir -p install/include
        cp ssentencepiece/csrc/*.h install/include/

    - name: Upload static library
      uses: actions/upload-artifact@v4
      with:
        name: windows-static-lib
        path: |
          install/**/*
        retention-days: 1

  python-package:
    needs: static-lib
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        arch: [x64]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.arch }}

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools cmake ninja pytest

    - name: Build Python Package
      shell: msys2 {0}
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1
      run: |
        cmake -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DSBPE_ENABLE_TESTS=ON \
          -DCMAKE_CXX_STANDARD=14 \
          -DCMAKE_CXX_STANDARD_REQUIRED=ON \
          -DCMAKE_LIBRARY_OUTPUT_DIRECTORY="$PWD/build/lib" \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="$PWD/build/bin"
        cmake --build build --config Release
    
    - name: List build files
      shell: msys2 {0}
      run: |
        ls -la build
        ls -la build/lib
        ls -la build/Release || echo "No Release directory"

    - name: Build wheel
      shell: msys2 {0}
      env:
        PYTHONIOENCODING: utf-8
        PYTHONUTF8: 1
        CMAKE_GENERATOR: Ninja
      run: |
        "${pythonLocation}/python.exe" setup.py bdist_wheel
        ls -la dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows-${{ matrix.python-version }}-${{ matrix.arch }}
        path: |
          dist/*.whl
        retention-days: 1 